{"version":3,"sources":["assets/img/remove.svg","components/Badge/Badge.js","components/List/index.jsx","assets/img/add.svg","assets/img/close.svg","components/AddButtonList/AddButtonList.js","assets/img/edit.svg","components/Tasks/AddTaskForm.js","components/Tasks/Task.js","components/Tasks/Tasks.js","assets/img/list.svg","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","src","alt","name","tasks","length","removeSvg","window","confirm","axios","delete","then","removeList","AddButtonList","colors","onAddList","React","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","addSvg","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","finally","alert","AddTaskForm","list","onAddTask","visibleForm","setVisibleForm","toggleFormVisible","disabled","obj","listId","text","completed","catch","Task","onEdit","onComplete","checked","htmlFor","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","readOnly","Tasks","onEditTitle","withoutEmpty","onEditTask","onRemoveTask","onCompleteTask","style","hex","newTitle","prompt","patch","editSvg","task","App","lists","setLists","setColors","setActiveItem","history","useHistory","location","useLocation","get","taskObj","newList","taskId","onEditListTitle","title","newTaskText","pathname","split","find","Number","push","listSvg","exact","path","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f9e72b24.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove.f5660af3.svg\";","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Badge.scss';\r\n\r\nconst Badge = ({ color, onClick, className }) => (\r\n    <i onClick = { onClick } className = {classNames('badge', {[`badge--${color}`]: color}, className )}></i>\r\n)\r\n\r\nexport default Badge;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport axios from 'axios';\r\n\r\nimport removeSvg from '../../assets/img/remove.svg';\r\n\r\nimport Badge from '../Badge/Badge';\r\n\r\nimport './List.scss';\r\n\r\n\r\nconst List = ({ items, isRemovable, onClick, onRemove, onClickItem, activeItem }) => {\r\n    \r\n    const removeList = (item) => {\r\n        if (window.confirm('Вы действительно хотите удалить список ?')) {\r\n            axios.delete('http://localhost:3001/lists/' + item.id).then(() => {\r\n                onRemove(item.id);\r\n            })\r\n                                               \r\n        }\r\n    }\r\n\r\n    return (\r\n        <ul className=\"list\" onClick = { onClick }>\r\n            {items.map((item, index) => (\r\n                <li \r\n                    key = {`${item.name}_${index}`} \r\n                    className = {classNames(item.className, { \r\n                        active: item.active ? item.active : \r\n                        activeItem && activeItem.id === item.id\r\n                    })}\r\n                    onClick = {onClickItem ? () => onClickItem(item):null }>\r\n                    <i>\r\n                        {item.icon ? (\r\n                            <img src = { item.icon } alt = \"list icon\"/>) :\r\n                            (<Badge color = {item.color.name}/>)\r\n                        }\r\n                    </i>\r\n                    <span> \r\n                        {item.name} \r\n                        {item.tasks && ` (${item.tasks.length})`}\r\n                    </span>\r\n                    {isRemovable && (\r\n                        <img \r\n                            className = \"list__remove-icon\" \r\n                            src = { removeSvg } \r\n                            alt = \"\"\r\n                            onClick = {() => removeList(item) }/>\r\n                        )}\r\n                </li>\r\n            ))}     \r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","export default __webpack_public_path__ + \"static/media/add.c4fa83e1.svg\";","export default __webpack_public_path__ + \"static/media/close.b83c2023.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport List from '../List';\r\nimport Badge from '../Badge/Badge';\r\n\r\n\r\nimport './AddButtonList.scss';\r\nimport addSvg from '../../assets/img/add.svg';\r\nimport closeSvg from '../../assets/img/close.svg';\r\n\r\n\r\n\r\nconst AddButtonList = ({ colors, onAddList }) => {\r\n    const [visiblePopup, setVisiblePopup] = React.useState(false);\r\n    const [selectedColor, setSelectedColor] = React.useState(3);\r\n    const [inputValue, setInputValue] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n      if (Array.isArray(colors)) {\r\n        setSelectedColor(colors[0].id)\r\n      }\r\n    }, [colors])\r\n\r\n    const onClose = () => {\r\n      setVisiblePopup(false);\r\n      setInputValue('');\r\n      setSelectedColor(colors[0].id);\r\n    }\r\n\r\n    const addList = () => {\r\n      if (!inputValue) {\r\n        alert('Введите название списка');\r\n        return;\r\n      }\r\n      setIsLoading(true)\r\n      axios.post('http://localhost:3001/lists', { name: inputValue, colorId: selectedColor }).then(({ data }) => {\r\n        const color = colors.filter(c => c.id === selectedColor)[0];\r\n        const listObj = { ...data, color, tasks: [] }\r\n        onAddList(listObj);\r\n        onClose();\r\n        \r\n      }).finally(() => {\r\n        setIsLoading(false);\r\n      })\r\n      \r\n    }\r\n\r\n    return (\r\n        <div className = \"add-list\">\r\n          <List \r\n            onClick = {() => setVisiblePopup(true)}\r\n            items = {[\r\n              {\r\n                className: 'list__add-button',\r\n                icon: addSvg,\r\n                name: 'Добавить список'\r\n              },\r\n            ]}/>\r\n\r\n          {visiblePopup && <div className = \"add-list__popup\">\r\n            <img\r\n              onClick = {onClose} \r\n              src = { closeSvg } \r\n              alt = \"\" \r\n              className = \"add-list__popup-close-btn\"/>\r\n            <input value = { inputValue } onChange = {(e) => setInputValue(e.target.value) } className = \"field\" type = \"text\" placeholder = \"Название папка\"/>\r\n            <div className = \"add-list__popup-colors\">\r\n              {\r\n                colors.map(color => <Badge \r\n                                      onClick = {() => setSelectedColor(color.id)} \r\n                                      key = {color.id} \r\n                                      color = {color.name}\r\n                                      className = {selectedColor === color.id && 'active'} />)\r\n              }\r\n            </div>\r\n            <button className = \"button\" onClick = { addList }> {isLoading ? 'Добавление':'Добавить'} </button>\r\n          </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddButtonList;","export default __webpack_public_path__ + \"static/media/edit.1bda04de.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport addSvg from '../../assets/img/add.svg';\r\n\r\nconst AddTaskForm = ({ list, onAddTask}) => {\r\n    const [visibleForm, setVisibleForm] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState(\"\");\r\n    const [isLoading, setIsLoading] = React.useState(\"\");\r\n\r\n    const toggleFormVisible = () => {\r\n        setVisibleForm(!visibleForm)\r\n        setInputValue('');\r\n    }\r\n\r\n    const addTask = () => {\r\n        const obj = {\r\n            listId: list.id,\r\n            text: inputValue,\r\n            completed: false\r\n        }\r\n        setIsLoading(true);\r\n        axios.post('http://localhost:3001/tasks', obj).then(({ data }) => {\r\n            onAddTask(list.id, data);\r\n            toggleFormVisible();\r\n        }).catch(() => {\r\n            alert(\"Ошибка при добавлении задачи !\")\r\n        }) \r\n        .finally(() => {\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"tasks__form\">\r\n            {!visibleForm ?  \r\n\r\n            <div onClick = { toggleFormVisible } className=\"tasks__form-new\">\r\n                <img src={addSvg} alt=\"\" />\r\n                <span> Новая завача </span>\r\n            </div>:\r\n\r\n            <div className = \"tasks__form-block\">\r\n                <input className = \"field\" type = \"text\" placeholder = \"Текст задачи\" onChange = {e => setInputValue(e.target.value)}/>\r\n                <button disabled = { isLoading } className = \"button\" onClick = { addTask }> {isLoading ? 'Добавление': 'Добавить задачу'} </button>\r\n                <button className = \"button button--grey\" onClick = { toggleFormVisible }> Отмена </button>\r\n            </div>}\r\n           \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddTaskForm","import React from 'react';\r\n\r\nconst Task = ({ id, text, completed, list, onRemove, onEdit, onComplete }) => {\r\n\r\n    const onChangeCheckbox = (e) => {\r\n        onComplete(list.id, id, e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tasks__item-row\">\r\n            <div className=\"checkbox\">\r\n                <input onChange = { onChangeCheckbox } id={`task-${id}`} type=\"checkbox\" checked = { completed }/>\r\n                <label htmlFor={`task-${id}`}>\r\n                    <svg width=\"11\" height=\"8\" viewBox=\"0 0 11 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\" stroke=\"white\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n                </label>\r\n            </div>\r\n\r\n            <input readOnly value={text} />\r\n\r\n            <div className=\"tasks__item-row-actions\">\r\n                <div onClick = { () => onEdit(list.id, { id, text }) }>\r\n                    <svg\r\n                        width=\"15\"\r\n                        height=\"15\"\r\n                        viewBox=\"0 0 15 15\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <div onClick = {() => onRemove(list.id, id) }>\r\n                    <svg\r\n                        width=\"11\"\r\n                        height=\"11\"\r\n                        viewBox=\"0 0 11 11\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n                            fill=\"black\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Tasks.scss';\r\n\r\nimport editSvg from '../../assets/img/edit.svg'\r\nimport AddTaskForm from './AddTaskForm';\r\nimport Task from './Task';\r\n\r\n\r\nconst Tasks = ({ list, onEditTitle, onAddTask, withoutEmpty, onEditTask, onRemoveTask, onCompleteTask }) => {\r\n\r\n    const editTitle = () => {\r\n        const newTitle = window.prompt('Название списка', list.name);\r\n\r\n        if (newTitle) {\r\n            onEditTitle(list.id, newTitle);\r\n            axios.patch('http://localhost:3001/lists/' + list.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Не удалось обновить название списка')\r\n            });\r\n        }\r\n\r\n    }\r\n   \r\n    \r\n    return (\r\n        <div className=\"tasks\">\r\n            <h2 style = {{ color: list.color.hex }} className=\"tasks__title\">\r\n                {list.name}\r\n                <img onClick = { editTitle } src={editSvg} alt=\"Edit icon\" />\r\n            </h2>\r\n\r\n            <div className=\"tasks__item\">\r\n                {!withoutEmpty&& list.tasks && !list.tasks.length && <h2> Задачи отсутствуют </h2>}\r\n                {   list.tasks &&   \r\n                    list.tasks.map(task => {\r\n                        return (\r\n                            <Task \r\n                                key = { task.id } \r\n                                {...task} \r\n                                list = { list } \r\n                                onEdit = { onEditTask } \r\n                                onRemove = { onRemoveTask }\r\n                                onComplete = { onCompleteTask }/>\r\n                        )})\r\n                }\r\n                \r\n                <AddTaskForm key = { list.id } list = { list } onAddTask = { onAddTask }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;","export default __webpack_public_path__ + \"static/media/list.2b422bc7.svg\";","import React from 'react';\nimport { Route, useHistory, useLocation } from 'react-router-dom';\n\nimport { List, Tasks, AddButtonList } from './components';\nimport axios from 'axios';\nimport listSvg from './assets/img/list.svg';\n\nfunction App() {\n\n  const [lists, setLists] = React.useState(null);\n  const [colors, setColors] = React.useState(null);\n  const [activeItem, setActiveItem] = React.useState(null);\n  let history = useHistory();\n  let location = useLocation();\n\n  React.useEffect(() => {\n    axios.get('http://localhost:3001/lists?_expand=color&_embed=tasks').then(({ data }) => {\n      setLists(data);\n    });\n\n    axios.get('http://localhost:3001/colors').then(({ data }) => {\n      setColors(data);\n    })\n  }, [])\n  \n  \n  const onAddList = (obj) => {\n    const newList = [...lists, obj];\n    setLists(newList);\n  }\n\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj];\n      }\n      return item;\n    });\n    setLists(newList);\n  }\n\n  const onCompleteTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        });\n      }\n      return list;\n    });\n    setLists(newList);\n    axios.patch('http://localhost:3001/tasks/' + taskId, {\n      completed\n    }).catch(() => {\n      alert('Не удалось обнавить задачу');\n    })\n\n  }\n\n  const onEditListTitle = (id,title) => {\n    const newList = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    });\n    setLists(newList)\n  }\n\n  const onEditTask  = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст задачи', taskObj.text);\n\n    if (!newTaskText) {\n      return;\n    }\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = item.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        });\n      }\n      return item;\n    });\n    setLists(newList);\n    axios.patch('http://localhost:3001/tasks/' + taskObj.id, { \n      text: newTaskText \n    }).catch(() => {\n      alert('Не удалось изменить задачу')\n    })\n  }\n\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу ?')) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId);\n        }\n        return item;\n      })\n      setLists(newList);\n      axios.delete('http://localhost:3001/tasks/' + taskId).catch(() => {\n          alert('Не удалось удалить задачу')\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId))\n      setActiveItem(list)\n    }\n  },[lists, location.pathname ])\n  \n  return (\n    <div className = \"todo\">\n      <div className = \"todo__sidebar\">\n        <List \n        onClickItem = {list => {\n          history.push('/');\n        }}\n        items = {[\n          {\n            active: !activeItem,\n            icon: listSvg,\n            name: 'Все задачи',\n          }\n        ]}/>\n\n        \n        {lists ? <List \n          items = { lists } \n          isRemovable \n          onRemove = {id => {\n            const newList = lists.filter(item => item.id !== id);\n            setLists(newList)\n          }}\n          onClickItem = {list => {\n            \n            history.push(`/lists/${list.id}`)\n          }}\n          activeItem = { activeItem }\n        />: ('Загрузка...')}\n        <AddButtonList onAddList = { onAddList } colors = { colors }/>\n      </div>\n\n      <div className = \"todo__tasks\">\n        <Route exact path = \"/\">\n          { lists &&\n            lists.map(list => (\n              <Tasks \n                key = { list.id }\n                list = { list }\n                onAddTask = { onAddTask }\n                onEditTitle = { onEditListTitle }\n                onRemoveTask = {onRemoveTask}\n                onEditTask = { onEditTask }\n                onCompleteTask = { onCompleteTask }\n                withoutEmpty\n              />\n            ))\n          }\n        </Route>\n        <Route path = \"/lists/:id\">\n          { \n            lists && \n            activeItem && \n            <Tasks \n              list = { activeItem } \n              onAddTask = { onAddTask } \n              onEditTitle = { onEditListTitle }\n              onRemoveTask = {onRemoveTask}\n              onEditTask = { onEditTask }\n              onCompleteTask = { onCompleteTask } />\n          }\n              \n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter basename = {process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}